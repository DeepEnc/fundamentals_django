pipeline {
    agent {
        docker {
            image 'docker:latest' // Use Docker image
            args '-v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
        }
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') // Jenkins credentials ID
        IMAGE_NAME = 'myusername/my-image' // Docker Hub image name
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/yourusername/yourrepo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_NAME}:latest ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Login to Docker Hub
                    sh "echo '${DOCKERHUB_CREDENTIALS_PSW}' | docker login -u '${DOCKERHUB_CREDENTIALS_USR}' --password-stdin"

                    // Push the image to Docker Hub
                    sh "docker push ${IMAGE_NAME}:latest"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Apply Kubernetes configuration (assuming deployment.yaml is present)
                    sh "kubectl apply -f k8s/deployment.yaml"

                    // Optionally update the image in the deployment
                    sh "kubectl set image deployment/my-deployment my-container=${IMAGE_NAME}:latest --record"
                }
            }
        }
    }
}
